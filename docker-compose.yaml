version: '3.8'

services:
    symfony:
        build: symfony_config
        container_name: symfony_docker
        ports:
            - "8245:80"
        volumes:
            - ./symfony_config/vhosts:/etc/apache2/sites-enabled
            - ./symfony_project:/var/www/symfony_project
        restart: on-failure
        networks:
            - dev
        # entrypoint: /bin/bash -c "cd symfony_project && composer install"
        


    maildev:
        image: maildev/maildev
        container_name: maildev_docker
        command: bin/maildev --web 80 --smtp 25 --hide-extensions STARTTLS
        ports:
            - "8081:80"
        restart: on-failure
        networks:
            - dev

    db:
        image: mariadb:10.7.1
        container_name: mariadb_docker
        restart: on-failure
        volumes:
            - db-data:/var/lib/mysql
        environment:
            MYSQL_DATABASE: data
            MYSQL_USER: root
            MYSQL_ROOT_PASSWORD: password
        networks:
            - dev 

    phpmyadmin:
        image: phpmyadmin
        container_name: phpmyadmin_docker
        restart: on-failure
        depends_on:
            - db
        ports:
            - "8080:80"
        environment:
            PMA_HOST: db
        networks:
            - dev

    caddy:
        image: dunglas/mercure
        restart: on-failure
        container_name: mercure_docker
        environment:
            # Uncomment the following line to disable HTTPS
            SERVER_NAME: ':80'
            MERCURE_PUBLISHER_JWT_KEY: '!ChangeThisMercureSecretKeyWithAKeyGreaterThan256Bits!'
            MERCURE_SUBSCRIBER_JWT_KEY: '!ChangeThisMercureSecretKeyWithAKeyGreaterThan256Bits!'
            MERCURE_EXTRA_DIRECTIVES:
                cors_origins "http://localhost:5432"
                cors_origins "http://localhost:8245"
                cors_origins "http://localhost:5500"
                cors_origins "http://localhost:9090"
                cors_origins "http://192.168.1.11:19000"
                # cors_origins "*"
        # Uncomment the following line to enable the development mode
        command: /usr/bin/caddy run -config /etc/caddy/Caddyfile.dev
        ports:
            - "9090:80"
            - "443:443"
#        volumes:
#            - caddy_data:/data
#            - caddy_config:/config
        networks:
            - dev

networks:
    dev:

volumes:
    db-data:
#    caddy_data:
#    caddy_config: